// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: hxnjFF4aKPQYJ3QuD1VZUf
// Component: f3Snupggumc
import * as React from "react";
import Link from "next/link";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import IconLink from "../../IconLink"; // plasmic-import: MnkFthvvCsp/component
import TextInput from "../../TextInput"; // plasmic-import: 9Qnm4WdRDSOR/component
import Button from "../../Button"; // plasmic-import: qufbzsruI3cM/component
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 5twopocMqt8Y/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_simple_light_landing_page.module.css"; // plasmic-import: hxnjFF4aKPQYJ3QuD1VZUf/projectcss
import * as sty from "./PlasmicFooter.module.css"; // plasmic-import: f3Snupggumc/css
import LogoIcon from "./icons/PlasmicIcon__Logo"; // plasmic-import: Kn25pp8pOweS/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: G8PXomlYbvTv/icon
import TwitterIconIcon from "./icons/PlasmicIcon__TwitterIcon"; // plasmic-import: Y4kCicowFxLI/icon
import GithubIconIcon from "./icons/PlasmicIcon__GithubIcon"; // plasmic-import: Awe8ImUzcx8p/icon
import FacebookIconIcon from "./icons/PlasmicIcon__FacebookIcon"; // plasmic-import: JHHPjpIeX9em/icon

export const PlasmicFooter__VariantProps = new Array();

export const PlasmicFooter__ArgProps = new Array();

function PlasmicFooter__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        defaultcss.all,
        projectcss.all,
        projectcss.root_reset,
        sty.root
      )}
    >
      <div
        className={classNames(
          defaultcss.all,
          projectcss.all,
          sty.freeBox___5LSuP
        )}
      />

      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(
          defaultcss.all,
          projectcss.all,
          sty.freeBox__gtdDh
        )}
      >
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(
            defaultcss.all,
            projectcss.all,
            sty.freeBox__jvRu7
          )}
        >
          <IconLink
            className={classNames("__wab_instance", sty.iconLink__fdPAs)}
            icon={
              <LogoIcon
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  sty.svg___0Ub2Y
                )}
                role={"img"}
              />
            }
          />

          <div
            className={classNames(
              defaultcss.all,
              projectcss.all,
              sty.freeBox___4B63T
            )}
          >
            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                defaultcss.__wab_text,
                sty.link__rFTgj
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Terms"}
            </p.PlasmicLink>

            <div
              className={classNames(
                defaultcss.all,
                projectcss.all,
                defaultcss.__wab_text,
                sty.text__a65H
              )}
            >
              {" Â· "}
            </div>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                defaultcss.__wab_text,
                sty.link__lk8Wl
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Privacy"}
            </p.PlasmicLink>
          </div>
        </p.Stack>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(
            defaultcss.all,
            projectcss.all,
            sty.freeBox__ctNJy
          )}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(
              defaultcss.all,
              projectcss.all,
              sty.freeBox__htlRu
            )}
          >
            <div
              className={classNames(
                defaultcss.all,
                projectcss.all,
                defaultcss.__wab_text,
                sty.text__t4K5M
              )}
            >
              {"Products"}
            </div>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                defaultcss.__wab_text,
                sty.link__cgNy7
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Web Studio"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                defaultcss.__wab_text,
                sty.link__sz0R2
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"DynamicBox Flex"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                defaultcss.__wab_text,
                sty.link___43R
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Programming Forms"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                defaultcss.__wab_text,
                sty.link___5LE7P
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Integrations"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                defaultcss.__wab_text,
                sty.link__bzC4R
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Command-line"}
            </p.PlasmicLink>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(
              defaultcss.all,
              projectcss.all,
              sty.freeBox__mo0IR
            )}
          >
            <div
              className={classNames(
                defaultcss.all,
                projectcss.all,
                defaultcss.__wab_text,
                sty.text__c3Kh
              )}
            >
              {"Resources"}
            </div>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                defaultcss.__wab_text,
                sty.link__m4Y7F
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Documentation"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                defaultcss.__wab_text,
                sty.link__ymG2O
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Tutorials & Guides"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                defaultcss.__wab_text,
                sty.link___8OVx
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Blog"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                defaultcss.__wab_text,
                sty.link__z8QhG
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Support Center"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                defaultcss.__wab_text,
                sty.link__dd1C
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Partners"}
            </p.PlasmicLink>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(
              defaultcss.all,
              projectcss.all,
              sty.freeBox___9FuKb
            )}
          >
            <div
              className={classNames(
                defaultcss.all,
                projectcss.all,
                defaultcss.__wab_text,
                sty.text__xmYiF
              )}
            >
              {"Company"}
            </div>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                defaultcss.__wab_text,
                sty.link___9UjfV
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Home"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                defaultcss.__wab_text,
                sty.link__fWe2G
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"About us"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                defaultcss.__wab_text,
                sty.link__gJwJs
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Company values"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                defaultcss.__wab_text,
                sty.link___8BqM0
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Pricing"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                defaultcss.__wab_text,
                sty.link___3OdDp
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Privacy policy"}
            </p.PlasmicLink>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(
              defaultcss.all,
              projectcss.all,
              sty.freeBox__czOeG
            )}
          >
            <div
              className={classNames(
                defaultcss.all,
                projectcss.all,
                defaultcss.__wab_text,
                sty.text__rb6T8
              )}
            >
              {"Subscribe"}
            </div>

            <div
              className={classNames(
                defaultcss.all,
                projectcss.all,
                defaultcss.__wab_text,
                sty.text__aHmps
              )}
            >
              {"Get the latest news and articles to your inbox every month."}
            </div>

            <TextInput
              data-plasmic-name={"textInput"}
              data-plasmic-override={overrides.textInput}
              className={classNames("__wab_instance", sty.textInput)}
              endIcon={
                <Button
                  data-plasmic-name={"button"}
                  data-plasmic-override={overrides.button}
                  className={classNames("__wab_instance", sty.button)}
                  color={"clear"}
                  size={"compact"}
                  startIcon={
                    <IconIcon
                      className={classNames(
                        defaultcss.all,
                        projectcss.all,
                        sty.svg__i7AJr
                      )}
                      role={"img"}
                    />
                  }
                >
                  <IconIcon
                    className={classNames(
                      defaultcss.all,
                      projectcss.all,
                      sty.svg___9EdM
                    )}
                    role={"img"}
                  />
                </Button>
              }
              fontSize={"small"}
              placeholder={"Your email"}
              showEndIcon={"showEndIcon"}
            />
          </p.Stack>
        </p.Stack>
      </p.Stack>

      <div
        className={classNames(
          defaultcss.all,
          projectcss.all,
          sty.freeBox__ukNFd
        )}
      />

      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(
          defaultcss.all,
          projectcss.all,
          sty.freeBox__lgPzl
        )}
      >
        <div
          className={classNames(
            defaultcss.all,
            projectcss.all,
            sty.freeBox__wU7YL
          )}
        >
          <p.PlasmicLink
            className={classNames(
              defaultcss.a,
              projectcss.a,
              defaultcss.__wab_text,
              sty.link__uUyXv
            )}
            component={Link}
            href={"https://cruip.com/"}
            platform={"nextjs"}
          >
            {"Designed by Cruip. "}
          </p.PlasmicLink>

          <p.PlasmicLink
            className={classNames(
              defaultcss.a,
              projectcss.a,
              defaultcss.__wab_text,
              sty.link__jaY4O
            )}
            component={Link}
            href={"https://www.plasmic.app/"}
            platform={"nextjs"}
          >
            {"Built in Plasmic. "}
          </p.PlasmicLink>

          <div
            className={classNames(
              defaultcss.all,
              projectcss.all,
              defaultcss.__wab_text,
              sty.text__hltpY
            )}
          >
            {"All rights reserved."}
          </div>
        </div>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(
            defaultcss.all,
            projectcss.all,
            sty.freeBox__kcfPz
          )}
        >
          <IconLink
            className={classNames("__wab_instance", sty.iconLink__qdjub)}
            icon={
              <TwitterIconIcon
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  sty.svg__kZkqj
                )}
                role={"img"}
              />
            }
          />

          <IconLink
            className={classNames("__wab_instance", sty.iconLink__tgNYo)}
            icon={
              <GithubIconIcon
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  sty.svg__tmKrX
                )}
                role={"img"}
              />
            }
          />

          <IconLink
            className={classNames("__wab_instance", sty.iconLink__o3Khf)}
            icon={
              <FacebookIconIcon
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  sty.svg___8K1S8
                )}
                role={"img"}
              />
            }
          />
        </p.Stack>
      </p.Stack>
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root", "textInput", "button"],
  textInput: ["textInput", "button"],
  button: ["button"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicFooter__ArgProps,
      internalVariantPropNames: PlasmicFooter__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicFooter__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFooter";
  } else {
    func.displayName = `PlasmicFooter.${nodeName}`;
  }
  return func;
}

export const PlasmicFooter = Object.assign(
  // Top-level PlasmicFooter renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    textInput: makeNodeComponent("textInput"),
    button: makeNodeComponent("button"),
    // Metadata about props expected for PlasmicFooter
    internalVariantProps: PlasmicFooter__VariantProps,
    internalArgProps: PlasmicFooter__ArgProps
  }
);

export default PlasmicFooter;
/* prettier-ignore-end */
