// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: hxnjFF4aKPQYJ3QuD1VZUf
// Component: VL8X3UBOmHt
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: SpQrDSfZy-T/component
import Section from "../../Section"; // plasmic-import: XqCYd9Plo5RT/component
import Button from "../../Button"; // plasmic-import: qufbzsruI3cM/component
import FeatureCard from "../../FeatureCard"; // plasmic-import: dOG7Lq0ph4w/component
import Testimonial from "../../Testimonial"; // plasmic-import: QGqxHMrRzt7Y/component
import HomeCta from "../../HomeCta"; // plasmic-import: VOr_hW1BUN3/component
import Footer from "../../Footer"; // plasmic-import: f3Snupggumc/component
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 5twopocMqt8Y/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_simple_light_landing_page.module.css"; // plasmic-import: hxnjFF4aKPQYJ3QuD1VZUf/projectcss
import * as sty from "./PlasmicHome.module.css"; // plasmic-import: VL8X3UBOmHt/css
import RightArrowIcon from "./icons/PlasmicIcon__RightArrow"; // plasmic-import: 4JLjkUzWKily/icon
import LightningIcon from "./icons/PlasmicIcon__Lightning"; // plasmic-import: 0gJykjh8kbZ2/icon
import HammerIcon from "./icons/PlasmicIcon__Hammer"; // plasmic-import: 8IFkhHnsH3NT/icon
import PencilIcon from "./icons/PlasmicIcon__Pencil"; // plasmic-import: QOsO2c3yigsq/icon
import SwapIcon from "./icons/PlasmicIcon__Swap"; // plasmic-import: QxHoALNAQTuz/icon
import SlotIcon from "./icons/PlasmicIcon__Slot"; // plasmic-import: TyMAO7zwpxnJ/icon
import CycleIcon from "./icons/PlasmicIcon__Cycle"; // plasmic-import: -nLd4dVc-LZB/icon
import FacebookLogoIcon from "./icons/PlasmicIcon__FacebookLogo"; // plasmic-import: SmcuN9-BtvjB/icon
import TinderLogoIcon from "./icons/PlasmicIcon__TinderLogo"; // plasmic-import: PRuT87BcjclW/icon
import AirbnbLogoIcon from "./icons/PlasmicIcon__AirbnbLogo"; // plasmic-import: TusU1Bp6u8jp/icon
import HubspotLogoIcon from "./icons/PlasmicIcon__HubspotLogo"; // plasmic-import: f-oaIQkqpvHY/icon
import AmazonLogoIcon from "./icons/PlasmicIcon__AmazonLogo"; // plasmic-import: ISZBnBfISWE8/icon

export const PlasmicHome__VariantProps = new Array();

export const PlasmicHome__ArgProps = new Array();

function PlasmicHome__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            defaultcss.all,
            projectcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <Section
            data-plasmic-name={"topSection"}
            data-plasmic-override={overrides.topSection}
            className={classNames("__wab_instance", sty.topSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(
                defaultcss.all,
                projectcss.all,
                sty.freeBox__aE8No
              )}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  sty.freeBox__gfUx
                )}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    projectcss.all,
                    sty.freeBox__rnvJ6
                  )}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      projectcss.all,
                      defaultcss.__wab_text,
                      sty.text__upsyn
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "Make your website"
                      : "Make your website"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      projectcss.all,
                      defaultcss.__wab_text,
                      sty.text__fs3KI
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "wonderful"
                      : "wonderful"}
                  </div>
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    projectcss.all,
                    defaultcss.__wab_text,
                    sty.text__o7Zp8
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobile")
                    ? "Our landing page template works on all devices, so you only have to set it up once, and get beautiful results forever."
                    : "Our landing page template works on all devices, so you only have to set it up once, and get beautiful results forever."}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  sty.freeBox__xwzXd
                )}
              >
                <Button
                  className={classNames("__wab_instance", sty.button__dv5Nu)}
                  color={"blue"}
                  endIcon={
                    <RightArrowIcon
                      className={classNames(
                        defaultcss.all,
                        projectcss.all,
                        sty.svg__lh3Np
                      )}
                      role={"img"}
                    />
                  }
                  showEndIcon={"showEndIcon"}
                >
                  {"Start free trial"}
                </Button>

                <Button
                  className={classNames("__wab_instance", sty.button__bK9M)}
                >
                  {"Learn more"}
                </Button>
              </p.Stack>

              <div
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  sty.freeBox__eBgAt
                )}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__ebmm9)}
                  displayHeight={"100%"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  src={{
                    src: "/plasmic/simple_light_landing_page/images/heroImage.png",
                    fullWidth: 1536,
                    fullHeight: 864,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>
          </Section>

          <Section
            data-plasmic-name={"solutions"}
            data-plasmic-override={overrides.solutions}
            className={classNames("__wab_instance", sty.solutions)}
            hasSubtitle={"hasSubtitle"}
            hasTitle={"hasTitle"}
            subtitle={
              "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat."
            }
            title={"Explore the solutions"}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              hasGap={true}
              className={classNames(
                defaultcss.all,
                projectcss.all,
                sty.columns
              )}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  sty.column__b9Po7
                )}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(
                    defaultcss.all,
                    projectcss.all,
                    sty.freeBox__pwVNf
                  )}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      projectcss.all,
                      defaultcss.__wab_text,
                      sty.text__rgXwl
                    )}
                  >
                    {"Powerful suite of tools"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      projectcss.all,
                      defaultcss.__wab_text,
                      sty.text__ae3Ik
                    )}
                  >
                    {
                      "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa."
                    }
                  </div>

                  <FeatureCard
                    className={classNames(
                      "__wab_instance",
                      sty.featureCard__ugzBi
                    )}
                    description={
                      "Taking collaboration to the next level with security and administrative features built for teams"
                    }
                    iconBack={
                      <LightningIcon
                        className={classNames(
                          defaultcss.all,
                          projectcss.all,
                          sty.svg__uIKqm
                        )}
                        role={"img"}
                      />
                    }
                    long={"long"}
                    title={"Building the Simple ecosystem"}
                  />

                  <FeatureCard
                    className={classNames(
                      "__wab_instance",
                      sty.featureCard__xEbgi
                    )}
                    description={
                      "Taking collaboration to the next level with security and administrative features built for teams"
                    }
                    iconBack={
                      <HammerIcon
                        className={classNames(
                          defaultcss.all,
                          projectcss.all,
                          sty.svg___3KVA
                        )}
                        role={"img"}
                      />
                    }
                    long={"long"}
                    title={"Building the Simple Ecosystem"}
                  />

                  <FeatureCard
                    className={classNames(
                      "__wab_instance",
                      sty.featureCard__t5UkQ
                    )}
                    description={
                      "Taking collaboration to the next level with security and administrative features built for teams"
                    }
                    iconBack={
                      <PencilIcon
                        className={classNames(
                          defaultcss.all,
                          projectcss.all,
                          sty.svg__xv6As
                        )}
                        role={"img"}
                      />
                    }
                    long={"long"}
                    title={"Building the Simple Ecosystem"}
                  />
                </p.Stack>
              </div>

              <div
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  sty.column__uD9Sj
                )}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__dD4R)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  src={{
                    src: "/plasmic/simple_light_landing_page/images/simpleProject.png",
                    fullWidth: 1000,
                    fullHeight: 924,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>
          </Section>

          <Section
            data-plasmic-name={"howItWorks"}
            data-plasmic-override={overrides.howItWorks}
            className={classNames("__wab_instance", sty.howItWorks)}
            color={"halfDark"}
            hasSubtitle={"hasSubtitle"}
            hasTitle={"hasTitle"}
            subtitle={
              "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat."
            }
            title={"How Simple works"}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(
                defaultcss.all,
                projectcss.all,
                sty.freeBox__vmt7S
              )}
            >
              <FeatureCard
                className={classNames(
                  "__wab_instance",
                  sty.featureCard___9WsCd
                )}
                description={
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                }
                iconFront={
                  <SwapIcon
                    className={classNames(
                      defaultcss.all,
                      projectcss.all,
                      sty.svg___5F1Qw
                    )}
                    role={"img"}
                  />
                }
                title={"Initial Contact"}
              />

              <FeatureCard
                className={classNames("__wab_instance", sty.featureCard__objyi)}
                description={
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                }
                iconFront={
                  <SlotIcon
                    className={classNames(
                      defaultcss.all,
                      projectcss.all,
                      sty.svg___0QR2
                    )}
                    role={"img"}
                  />
                }
                title={"Discovery Session"}
              />

              <FeatureCard
                className={classNames("__wab_instance", sty.featureCard__j1KwI)}
                description={
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                }
                iconFront={
                  <CycleIcon
                    className={classNames(
                      defaultcss.all,
                      projectcss.all,
                      sty.svg__isLbL
                    )}
                    role={"img"}
                  />
                }
                title={"Contracting"}
              />

              <FeatureCard
                className={classNames("__wab_instance", sty.featureCard__xsAxN)}
                description={
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                }
                iconFront={
                  <HammerIcon
                    className={classNames(
                      defaultcss.all,
                      projectcss.all,
                      sty.svg__l5Gjr
                    )}
                    role={"img"}
                  />
                }
                title={"Fast Prototyping"}
              />

              <FeatureCard
                className={classNames(
                  "__wab_instance",
                  sty.featureCard___8Xiz8
                )}
                description={
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                }
                iconFront={
                  <PencilIcon
                    className={classNames(
                      defaultcss.all,
                      projectcss.all,
                      sty.svg___3CiV
                    )}
                    role={"img"}
                  />
                }
                title={"Design Phase"}
              />

              <FeatureCard
                className={classNames("__wab_instance", sty.featureCard__eApst)}
                description={
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                }
                iconFront={
                  <LightningIcon
                    className={classNames(
                      defaultcss.all,
                      projectcss.all,
                      sty.svg__fbcM
                    )}
                    role={"img"}
                  />
                }
                title={"Develop & Launch"}
              />
            </p.Stack>

            {true ? (
              <div
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  sty.freeBox___5Avtt
                )}
              />
            ) : null}
          </Section>

          <Section
            data-plasmic-name={"validation"}
            data-plasmic-override={overrides.validation}
            className={classNames("__wab_instance", sty.validation)}
            hasSubtitle={"hasSubtitle"}
            hasTitle={"hasTitle"}
            subtitle={
              "Arcu cursus vitae congue mauris rhoncus viverra nibh cras pulvinar mattis blandit libero cursus mattis."
            }
            title={"Trusted by over 20,000 companies all over the world"}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(
                defaultcss.all,
                projectcss.all,
                sty.freeBox__zx9Kb
              )}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  sty.freeBox___8Thwu
                )}
              >
                <FacebookLogoIcon
                  className={classNames(
                    defaultcss.all,
                    projectcss.all,
                    sty.svg__kx8O3
                  )}
                  role={"img"}
                />

                <TinderLogoIcon
                  className={classNames(
                    defaultcss.all,
                    projectcss.all,
                    sty.svg__x2T9U
                  )}
                  role={"img"}
                />

                <AirbnbLogoIcon
                  className={classNames(
                    defaultcss.all,
                    projectcss.all,
                    sty.svg__iVTv
                  )}
                  role={"img"}
                />

                <HubspotLogoIcon
                  className={classNames(
                    defaultcss.all,
                    projectcss.all,
                    sty.svg__c1Tes
                  )}
                  role={"img"}
                />

                <AmazonLogoIcon
                  className={classNames(
                    defaultcss.all,
                    projectcss.all,
                    sty.svg__lySma
                  )}
                  role={"img"}
                />
              </p.Stack>

              <Testimonial
                data-plasmic-name={"testimonial"}
                data-plasmic-override={overrides.testimonial}
                className={classNames("__wab_instance", sty.testimonial)}
              />
            </p.Stack>
          </Section>

          <HomeCta
            data-plasmic-name={"homeCta"}
            data-plasmic-override={overrides.homeCta}
            className={classNames("__wab_instance", sty.homeCta)}
          />

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "topSection",
    "solutions",
    "columns",
    "howItWorks",
    "validation",
    "testimonial",
    "homeCta",
    "footer"
  ],

  header: ["header"],
  topSection: ["topSection"],
  solutions: ["solutions", "columns"],
  columns: ["columns"],
  howItWorks: ["howItWorks"],
  validation: ["validation", "testimonial"],
  testimonial: ["testimonial"],
  homeCta: ["homeCta"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHome__ArgProps,
      internalVariantPropNames: PlasmicHome__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicHome__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHome";
  } else {
    func.displayName = `PlasmicHome.${nodeName}`;
  }
  return func;
}

export const PlasmicHome = Object.assign(
  // Top-level PlasmicHome renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    topSection: makeNodeComponent("topSection"),
    solutions: makeNodeComponent("solutions"),
    columns: makeNodeComponent("columns"),
    howItWorks: makeNodeComponent("howItWorks"),
    validation: makeNodeComponent("validation"),
    testimonial: makeNodeComponent("testimonial"),
    homeCta: makeNodeComponent("homeCta"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicHome
    internalVariantProps: PlasmicHome__VariantProps,
    internalArgProps: PlasmicHome__ArgProps
  }
);

export default PlasmicHome;
/* prettier-ignore-end */
